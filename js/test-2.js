/* –ó–∞–¥–∞—á–∞ 1: –ü–æ—à—É–∫ —É –º–∞—Å–∏–≤—ñ
–£–º–æ–≤–∞:
–Ñ –º–∞—Å–∏–≤ —Ñ—Ä—É–∫—Ç—ñ–≤:
const fruits = ["—è–±–ª—É–∫–æ", "–±–∞–Ω–∞–Ω", "–∫–∏–≤—ñ", "–≥—Ä—É—à–∞", "–º–∞–Ω–≥–æ"];
–°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é findFruit(fruitName), —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –∑–∞–¥–∞–Ω–∏–π —Ñ—Ä—É–∫—Ç —É —Å–ø–∏—Å–∫—É.
üî∏ –Ø–∫—â–æ —î ‚Äî –≤–∏–≤–æ–¥–∏—Ç—å: "–§—Ä—É–∫—Ç –∑–Ω–∞–π–¥–µ–Ω–æ: [–Ω–∞–∑–≤–∞]"
üî∏ –Ø–∫—â–æ –Ω—ñ ‚Äî "–¢–∞–∫–æ–≥–æ —Ñ—Ä—É–∫—Ç—É –Ω–µ–º–∞—î"
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –º–µ—Ç–æ–¥ includes() */

function findFruit(fruitName) {
    const fruits = ["—è–±–ª—É–∫–æ", "–±–∞–Ω–∞–Ω", "–∫–∏–≤—ñ", "–≥—Ä—É—à–∞", "–º–∞–Ω–≥–æ"];
    if (fruits.includes(fruitName)) {
        console.log(`–§—Ä—É–∫—Ç –∑–Ω–∞–π–¥–µ–Ω–æ: ${fruitName}`);
    } else {
        console.log("–¢–∞–∫–æ–≥–æ —Ñ—Ä—É–∫—Ç—É –Ω–µ–º–∞—î");
    }
}
findFruit("–±–∞–Ω–∞–Ω");     // ‚úî –§—Ä—É–∫—Ç –∑–Ω–∞–π–¥–µ–Ω–æ: –±–∞–Ω–∞–Ω
findFruit("–∞–ø–µ–ª—å—Å–∏–Ω");  // ‚úî –¢–∞–∫–æ–≥–æ —Ñ—Ä—É–∫—Ç—É –Ω–µ–º–∞—î


/* –ó–∞–¥–∞—á–∞ 2: –°—É–º–∞ —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ
–£–º–æ–≤–∞:
–Ñ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª:
const numbers = [10, 5, 3, 8, 2];
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getSum(arr), —è–∫–∞ —Ä–∞—Ö—É—î —Å—É–º—É –≤—Å—ñ—Ö —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ.
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π for...of. */

function getSum(arr) {
    let sum = 0;
    for (const num of arr) {
        sum += num;
    }
    return sum;
}
console.log(getSum([10, 5, 3, 8, 2])); // 28

/* –ó–∞–¥–∞—á–∞ 3: –í–∏–≤—ñ–¥ –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª
–£–º–æ–≤–∞:
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printEvenNumbers(arr), —è–∫–∞ –∑ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª –≤–∏–≤–æ–¥–∏—Ç—å –ª–∏—à–µ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞.
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π for...of —ñ if. */

function printEvenNumbers(arr) {
    for (const num of arr) {
        if (num % 2 === 0) {
            console.log(num);
        }
    }
}

console.log("–ü–∞—Ä–Ω—ñ —á–∏—Å–ª–∞:");
printEvenNumbers([10, 5, 3, 8, 2]); // 10, 8, 2

/* –ó–∞–¥–∞—á–∞ 4: –î–æ–¥–∞–≤–∞–Ω–Ω—è —ñ–º–µ–Ω
–£–º–æ–≤–∞:
–°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é addName(arr, newName), —è–∫–∞:
–¥–æ–¥–∞—î —ñ–º‚Äô—è —É –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É —ñ–º–µ–Ω (—è–∫—â–æ –π–æ–≥–æ —Ç–∞–º —â–µ –Ω–µ–º–∞—î)
–≤–∏–≤–æ–¥–∏—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –º–∞—Å–∏–≤
–ü—ñ–¥–∫–∞–∑–∫–∞: –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π includes() —Ç–∞ push() */

function addName(arr, newName) {
    if (!arr.includes(newName)) {
        arr.push(newName);
    }
    console.log("–û–Ω–æ–≤–ª–µ–Ω–∏–π –º–∞—Å–∏–≤:", arr);
}

/* –ó–∞–¥–∞—á–∞ 5: –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ
–£–º–æ–≤–∞:‚ùì –Ø–∫–µ –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ –∑–∑–æ–≤–Ω—ñ?
üîπ –ü–æ—è—Å–Ω–∏ —á–æ–º—É —Ç–∞–∫ –ø—Ä–∞—Ü—é—î.
–û—Å—å –∫–æ–¥: */

let color = "—Å–∏–Ω—ñ–π";

function printColor() {
  let color = "—á–µ—Ä–≤–æ–Ω–∏–π";
  console.log("–í—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:", color);
}

printColor();
console.log("–ó–∑–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:", color);


/* ---–ó–∞–≤–¥–∞–Ω–Ω—è 6:–ê—Ä–≥—É–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É (Array arguments)--- */
/* arguments ‚Äî –Ω–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –º–∞—Å–∏–≤, —Ç–æ–º—É –º–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—É –Ω–µ –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞–ø—Ä—è–º—É.
–ô–æ–≥–æ –º–æ–∂–Ω–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–∞ –º–∞—Å–∏–≤: Array.from(arguments) */

function showArguments() {
  console.log(arguments);
}
showArguments(1, "hello", true); 
// => [1, "hello", true] (—Ç–∏–ø—É –º–∞—Å–∏–≤, –∞–ª–µ –Ω–µ –∑–æ–≤—Å—ñ–º)

/* ---–ó–∞–≤–¥–∞–Ω–Ω—è 7:–êrray.from(...)--- */
/* –¶–µ–π –º–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –º–∞—Å–∏–≤ —ñ–∑:
–ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, arguments)
–∞–±–æ –∑ —Ä—è–¥–∫–∞, Set, Map, —ñ—Ç–µ—Ä–æ–≤–∞–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞ */

const str = "hello";
const letters = Array.from(str); 
console.log(letters); // ["h", "e", "l", "l", "o"]

function example() {
  const argsArray = Array.from(arguments);
  console.log(argsArray);
}
example(1, 2, 3); // [1, 2, 3]

/* ---–ó–∞–≤–¥–∞–Ω–Ω—è 8:Array.isArray(...)--- */
/* –¶–µ –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –∑–Ω–∞—á–µ–Ω–Ω—è –º–∞—Å–∏–≤–æ–º. –ü–æ–≤–µ—Ä—Ç–∞—î true –∞–±–æ false. */

Array.isArray([1, 2, 3]); // true
Array.isArray("hello"); // false
Array.isArray({}); // false

/* ---–ó–∞–≤–¥–∞–Ω–Ω—è 9: .padStart(2, "0")--- */
/* –¶–µ –º–µ—Ç–æ–¥ —Ä—è–¥–∫—ñ–≤, –∞ –Ω–µ –º–∞—Å–∏–≤—ñ–≤. –í—ñ–Ω –¥–æ–¥–∞—î —Å–∏–º–≤–æ–ª–∏ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ —Ä—è–¥–∫–∞, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –π–æ–≥–æ –∑–∞–¥–∞–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
üî∏ –ß–∞—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–µ–ª: */

const num = "7";
console.log(num.padStart(2, "0")); // "07"
